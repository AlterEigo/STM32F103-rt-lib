# [doc = r"Register block"] # [repr (C)] pub struct RegisterBlock { # [doc = "0x00 - CAN_MCR"] pub can_mcr : CAN_MCR , # [doc = "0x04 - CAN_MSR"] pub can_msr : CAN_MSR , # [doc = "0x08 - CAN_TSR"] pub can_tsr : CAN_TSR , # [doc = "0x0c - CAN_RF0R"] pub can_rf0r : CAN_RF0R , # [doc = "0x10 - CAN_RF1R"] pub can_rf1r : CAN_RF1R , # [doc = "0x14 - CAN_IER"] pub can_ier : CAN_IER , # [doc = "0x18 - CAN_ESR"] pub can_esr : CAN_ESR , # [doc = "0x1c - CAN_BTR"] pub can_btr : CAN_BTR , _reserved8 : [u8 ; 0x0160] , # [doc = "0x180 - CAN_TI0R"] pub can_ti0r : CAN_TI0R , # [doc = "0x184 - CAN_TDT0R"] pub can_tdt0r : CAN_TDT0R , # [doc = "0x188 - CAN_TDL0R"] pub can_tdl0r : CAN_TDL0R , # [doc = "0x18c - CAN_TDH0R"] pub can_tdh0r : CAN_TDH0R , # [doc = "0x190 - CAN_TI1R"] pub can_ti1r : CAN_TI1R , # [doc = "0x194 - CAN_TDT1R"] pub can_tdt1r : CAN_TDT1R , # [doc = "0x198 - CAN_TDL1R"] pub can_tdl1r : CAN_TDL1R , # [doc = "0x19c - CAN_TDH1R"] pub can_tdh1r : CAN_TDH1R , # [doc = "0x1a0 - CAN_TI2R"] pub can_ti2r : CAN_TI2R , # [doc = "0x1a4 - CAN_TDT2R"] pub can_tdt2r : CAN_TDT2R , # [doc = "0x1a8 - CAN_TDL2R"] pub can_tdl2r : CAN_TDL2R , # [doc = "0x1ac - CAN_TDH2R"] pub can_tdh2r : CAN_TDH2R , # [doc = "0x1b0 - CAN_RI0R"] pub can_ri0r : CAN_RI0R , # [doc = "0x1b4 - CAN_RDT0R"] pub can_rdt0r : CAN_RDT0R , # [doc = "0x1b8 - CAN_RDL0R"] pub can_rdl0r : CAN_RDL0R , # [doc = "0x1bc - CAN_RDH0R"] pub can_rdh0r : CAN_RDH0R , # [doc = "0x1c0 - CAN_RI1R"] pub can_ri1r : CAN_RI1R , # [doc = "0x1c4 - CAN_RDT1R"] pub can_rdt1r : CAN_RDT1R , # [doc = "0x1c8 - CAN_RDL1R"] pub can_rdl1r : CAN_RDL1R , # [doc = "0x1cc - CAN_RDH1R"] pub can_rdh1r : CAN_RDH1R , _reserved28 : [u8 ; 0x30] , # [doc = "0x200 - CAN_FMR"] pub can_fmr : CAN_FMR , # [doc = "0x204 - CAN_FM1R"] pub can_fm1r : CAN_FM1R , _reserved30 : [u8 ; 0x04] , # [doc = "0x20c - CAN_FS1R"] pub can_fs1r : CAN_FS1R , _reserved31 : [u8 ; 0x04] , # [doc = "0x214 - CAN_FFA1R"] pub can_ffa1r : CAN_FFA1R , _reserved32 : [u8 ; 0x04] , # [doc = "0x21c - CAN_FA1R"] pub can_fa1r : CAN_FA1R , _reserved33 : [u8 ; 0x20] , # [doc = "0x240 - Filter bank 0 register 1"] pub f0r1 : F0R1 , # [doc = "0x244 - Filter bank 0 register 2"] pub f0r2 : F0R2 , # [doc = "0x248 - Filter bank 1 register 1"] pub f1r1 : F1R1 , # [doc = "0x24c - Filter bank 1 register 2"] pub f1r2 : F1R2 , # [doc = "0x250 - Filter bank 2 register 1"] pub f2r1 : F2R1 , # [doc = "0x254 - Filter bank 2 register 2"] pub f2r2 : F2R2 , # [doc = "0x258 - Filter bank 3 register 1"] pub f3r1 : F3R1 , # [doc = "0x25c - Filter bank 3 register 2"] pub f3r2 : F3R2 , # [doc = "0x260 - Filter bank 4 register 1"] pub f4r1 : F4R1 , # [doc = "0x264 - Filter bank 4 register 2"] pub f4r2 : F4R2 , # [doc = "0x268 - Filter bank 5 register 1"] pub f5r1 : F5R1 , # [doc = "0x26c - Filter bank 5 register 2"] pub f5r2 : F5R2 , # [doc = "0x270 - Filter bank 6 register 1"] pub f6r1 : F6R1 , # [doc = "0x274 - Filter bank 6 register 2"] pub f6r2 : F6R2 , # [doc = "0x278 - Filter bank 7 register 1"] pub f7r1 : F7R1 , # [doc = "0x27c - Filter bank 7 register 2"] pub f7r2 : F7R2 , # [doc = "0x280 - Filter bank 8 register 1"] pub f8r1 : F8R1 , # [doc = "0x284 - Filter bank 8 register 2"] pub f8r2 : F8R2 , # [doc = "0x288 - Filter bank 9 register 1"] pub f9r1 : F9R1 , # [doc = "0x28c - Filter bank 9 register 2"] pub f9r2 : F9R2 , # [doc = "0x290 - Filter bank 10 register 1"] pub f10r1 : F10R1 , # [doc = "0x294 - Filter bank 10 register 2"] pub f10r2 : F10R2 , # [doc = "0x298 - Filter bank 11 register 1"] pub f11r1 : F11R1 , # [doc = "0x29c - Filter bank 11 register 2"] pub f11r2 : F11R2 , # [doc = "0x2a0 - Filter bank 4 register 1"] pub f12r1 : F12R1 , # [doc = "0x2a4 - Filter bank 12 register 2"] pub f12r2 : F12R2 , # [doc = "0x2a8 - Filter bank 13 register 1"] pub f13r1 : F13R1 , # [doc = "0x2ac - Filter bank 13 register 2"] pub f13r2 : F13R2 , } # [doc = "CAN_MCR (rw) register accessor: an alias for `Reg<CAN_MCR_SPEC>`"] pub type CAN_MCR = crate :: Reg < can_mcr :: CAN_MCR_SPEC > ; # [doc = "CAN_MCR"] pub mod can_mcr ; # [doc = "CAN_MSR (rw) register accessor: an alias for `Reg<CAN_MSR_SPEC>`"] pub type CAN_MSR = crate :: Reg < can_msr :: CAN_MSR_SPEC > ; # [doc = "CAN_MSR"] pub mod can_msr ; # [doc = "CAN_TSR (rw) register accessor: an alias for `Reg<CAN_TSR_SPEC>`"] pub type CAN_TSR = crate :: Reg < can_tsr :: CAN_TSR_SPEC > ; # [doc = "CAN_TSR"] pub mod can_tsr ; # [doc = "CAN_RF0R (rw) register accessor: an alias for `Reg<CAN_RF0R_SPEC>`"] pub type CAN_RF0R = crate :: Reg < can_rf0r :: CAN_RF0R_SPEC > ; # [doc = "CAN_RF0R"] pub mod can_rf0r ; # [doc = "CAN_RF1R (rw) register accessor: an alias for `Reg<CAN_RF1R_SPEC>`"] pub type CAN_RF1R = crate :: Reg < can_rf1r :: CAN_RF1R_SPEC > ; # [doc = "CAN_RF1R"] pub mod can_rf1r ; # [doc = "CAN_IER (rw) register accessor: an alias for `Reg<CAN_IER_SPEC>`"] pub type CAN_IER = crate :: Reg < can_ier :: CAN_IER_SPEC > ; # [doc = "CAN_IER"] pub mod can_ier ; # [doc = "CAN_ESR (rw) register accessor: an alias for `Reg<CAN_ESR_SPEC>`"] pub type CAN_ESR = crate :: Reg < can_esr :: CAN_ESR_SPEC > ; # [doc = "CAN_ESR"] pub mod can_esr ; # [doc = "CAN_BTR (rw) register accessor: an alias for `Reg<CAN_BTR_SPEC>`"] pub type CAN_BTR = crate :: Reg < can_btr :: CAN_BTR_SPEC > ; # [doc = "CAN_BTR"] pub mod can_btr ; # [doc = "CAN_TI0R (rw) register accessor: an alias for `Reg<CAN_TI0R_SPEC>`"] pub type CAN_TI0R = crate :: Reg < can_ti0r :: CAN_TI0R_SPEC > ; # [doc = "CAN_TI0R"] pub mod can_ti0r ; # [doc = "CAN_TDT0R (rw) register accessor: an alias for `Reg<CAN_TDT0R_SPEC>`"] pub type CAN_TDT0R = crate :: Reg < can_tdt0r :: CAN_TDT0R_SPEC > ; # [doc = "CAN_TDT0R"] pub mod can_tdt0r ; # [doc = "CAN_TDL0R (rw) register accessor: an alias for `Reg<CAN_TDL0R_SPEC>`"] pub type CAN_TDL0R = crate :: Reg < can_tdl0r :: CAN_TDL0R_SPEC > ; # [doc = "CAN_TDL0R"] pub mod can_tdl0r ; # [doc = "CAN_TDH0R (rw) register accessor: an alias for `Reg<CAN_TDH0R_SPEC>`"] pub type CAN_TDH0R = crate :: Reg < can_tdh0r :: CAN_TDH0R_SPEC > ; # [doc = "CAN_TDH0R"] pub mod can_tdh0r ; # [doc = "CAN_TI1R (rw) register accessor: an alias for `Reg<CAN_TI1R_SPEC>`"] pub type CAN_TI1R = crate :: Reg < can_ti1r :: CAN_TI1R_SPEC > ; # [doc = "CAN_TI1R"] pub mod can_ti1r ; # [doc = "CAN_TDT1R (rw) register accessor: an alias for `Reg<CAN_TDT1R_SPEC>`"] pub type CAN_TDT1R = crate :: Reg < can_tdt1r :: CAN_TDT1R_SPEC > ; # [doc = "CAN_TDT1R"] pub mod can_tdt1r ; # [doc = "CAN_TDL1R (rw) register accessor: an alias for `Reg<CAN_TDL1R_SPEC>`"] pub type CAN_TDL1R = crate :: Reg < can_tdl1r :: CAN_TDL1R_SPEC > ; # [doc = "CAN_TDL1R"] pub mod can_tdl1r ; # [doc = "CAN_TDH1R (rw) register accessor: an alias for `Reg<CAN_TDH1R_SPEC>`"] pub type CAN_TDH1R = crate :: Reg < can_tdh1r :: CAN_TDH1R_SPEC > ; # [doc = "CAN_TDH1R"] pub mod can_tdh1r ; # [doc = "CAN_TI2R (rw) register accessor: an alias for `Reg<CAN_TI2R_SPEC>`"] pub type CAN_TI2R = crate :: Reg < can_ti2r :: CAN_TI2R_SPEC > ; # [doc = "CAN_TI2R"] pub mod can_ti2r ; # [doc = "CAN_TDT2R (rw) register accessor: an alias for `Reg<CAN_TDT2R_SPEC>`"] pub type CAN_TDT2R = crate :: Reg < can_tdt2r :: CAN_TDT2R_SPEC > ; # [doc = "CAN_TDT2R"] pub mod can_tdt2r ; # [doc = "CAN_TDL2R (rw) register accessor: an alias for `Reg<CAN_TDL2R_SPEC>`"] pub type CAN_TDL2R = crate :: Reg < can_tdl2r :: CAN_TDL2R_SPEC > ; # [doc = "CAN_TDL2R"] pub mod can_tdl2r ; # [doc = "CAN_TDH2R (rw) register accessor: an alias for `Reg<CAN_TDH2R_SPEC>`"] pub type CAN_TDH2R = crate :: Reg < can_tdh2r :: CAN_TDH2R_SPEC > ; # [doc = "CAN_TDH2R"] pub mod can_tdh2r ; # [doc = "CAN_RI0R (r) register accessor: an alias for `Reg<CAN_RI0R_SPEC>`"] pub type CAN_RI0R = crate :: Reg < can_ri0r :: CAN_RI0R_SPEC > ; # [doc = "CAN_RI0R"] pub mod can_ri0r ; # [doc = "CAN_RDT0R (r) register accessor: an alias for `Reg<CAN_RDT0R_SPEC>`"] pub type CAN_RDT0R = crate :: Reg < can_rdt0r :: CAN_RDT0R_SPEC > ; # [doc = "CAN_RDT0R"] pub mod can_rdt0r ; # [doc = "CAN_RDL0R (r) register accessor: an alias for `Reg<CAN_RDL0R_SPEC>`"] pub type CAN_RDL0R = crate :: Reg < can_rdl0r :: CAN_RDL0R_SPEC > ; # [doc = "CAN_RDL0R"] pub mod can_rdl0r ; # [doc = "CAN_RDH0R (r) register accessor: an alias for `Reg<CAN_RDH0R_SPEC>`"] pub type CAN_RDH0R = crate :: Reg < can_rdh0r :: CAN_RDH0R_SPEC > ; # [doc = "CAN_RDH0R"] pub mod can_rdh0r ; # [doc = "CAN_RI1R (r) register accessor: an alias for `Reg<CAN_RI1R_SPEC>`"] pub type CAN_RI1R = crate :: Reg < can_ri1r :: CAN_RI1R_SPEC > ; # [doc = "CAN_RI1R"] pub mod can_ri1r ; # [doc = "CAN_RDT1R (r) register accessor: an alias for `Reg<CAN_RDT1R_SPEC>`"] pub type CAN_RDT1R = crate :: Reg < can_rdt1r :: CAN_RDT1R_SPEC > ; # [doc = "CAN_RDT1R"] pub mod can_rdt1r ; # [doc = "CAN_RDL1R (r) register accessor: an alias for `Reg<CAN_RDL1R_SPEC>`"] pub type CAN_RDL1R = crate :: Reg < can_rdl1r :: CAN_RDL1R_SPEC > ; # [doc = "CAN_RDL1R"] pub mod can_rdl1r ; # [doc = "CAN_RDH1R (r) register accessor: an alias for `Reg<CAN_RDH1R_SPEC>`"] pub type CAN_RDH1R = crate :: Reg < can_rdh1r :: CAN_RDH1R_SPEC > ; # [doc = "CAN_RDH1R"] pub mod can_rdh1r ; # [doc = "CAN_FMR (rw) register accessor: an alias for `Reg<CAN_FMR_SPEC>`"] pub type CAN_FMR = crate :: Reg < can_fmr :: CAN_FMR_SPEC > ; # [doc = "CAN_FMR"] pub mod can_fmr ; # [doc = "CAN_FM1R (rw) register accessor: an alias for `Reg<CAN_FM1R_SPEC>`"] pub type CAN_FM1R = crate :: Reg < can_fm1r :: CAN_FM1R_SPEC > ; # [doc = "CAN_FM1R"] pub mod can_fm1r ; # [doc = "CAN_FS1R (rw) register accessor: an alias for `Reg<CAN_FS1R_SPEC>`"] pub type CAN_FS1R = crate :: Reg < can_fs1r :: CAN_FS1R_SPEC > ; # [doc = "CAN_FS1R"] pub mod can_fs1r ; # [doc = "CAN_FFA1R (rw) register accessor: an alias for `Reg<CAN_FFA1R_SPEC>`"] pub type CAN_FFA1R = crate :: Reg < can_ffa1r :: CAN_FFA1R_SPEC > ; # [doc = "CAN_FFA1R"] pub mod can_ffa1r ; # [doc = "CAN_FA1R (rw) register accessor: an alias for `Reg<CAN_FA1R_SPEC>`"] pub type CAN_FA1R = crate :: Reg < can_fa1r :: CAN_FA1R_SPEC > ; # [doc = "CAN_FA1R"] pub mod can_fa1r ; # [doc = "F0R1 (rw) register accessor: an alias for `Reg<F0R1_SPEC>`"] pub type F0R1 = crate :: Reg < f0r1 :: F0R1_SPEC > ; # [doc = "Filter bank 0 register 1"] pub mod f0r1 ; # [doc = "F0R2 (rw) register accessor: an alias for `Reg<F0R2_SPEC>`"] pub type F0R2 = crate :: Reg < f0r2 :: F0R2_SPEC > ; # [doc = "Filter bank 0 register 2"] pub mod f0r2 ; # [doc = "F1R1 (rw) register accessor: an alias for `Reg<F1R1_SPEC>`"] pub type F1R1 = crate :: Reg < f1r1 :: F1R1_SPEC > ; # [doc = "Filter bank 1 register 1"] pub mod f1r1 ; # [doc = "F1R2 (rw) register accessor: an alias for `Reg<F1R2_SPEC>`"] pub type F1R2 = crate :: Reg < f1r2 :: F1R2_SPEC > ; # [doc = "Filter bank 1 register 2"] pub mod f1r2 ; # [doc = "F2R1 (rw) register accessor: an alias for `Reg<F2R1_SPEC>`"] pub type F2R1 = crate :: Reg < f2r1 :: F2R1_SPEC > ; # [doc = "Filter bank 2 register 1"] pub mod f2r1 ; # [doc = "F2R2 (rw) register accessor: an alias for `Reg<F2R2_SPEC>`"] pub type F2R2 = crate :: Reg < f2r2 :: F2R2_SPEC > ; # [doc = "Filter bank 2 register 2"] pub mod f2r2 ; # [doc = "F3R1 (rw) register accessor: an alias for `Reg<F3R1_SPEC>`"] pub type F3R1 = crate :: Reg < f3r1 :: F3R1_SPEC > ; # [doc = "Filter bank 3 register 1"] pub mod f3r1 ; # [doc = "F3R2 (rw) register accessor: an alias for `Reg<F3R2_SPEC>`"] pub type F3R2 = crate :: Reg < f3r2 :: F3R2_SPEC > ; # [doc = "Filter bank 3 register 2"] pub mod f3r2 ; # [doc = "F4R1 (rw) register accessor: an alias for `Reg<F4R1_SPEC>`"] pub type F4R1 = crate :: Reg < f4r1 :: F4R1_SPEC > ; # [doc = "Filter bank 4 register 1"] pub mod f4r1 ; # [doc = "F4R2 (rw) register accessor: an alias for `Reg<F4R2_SPEC>`"] pub type F4R2 = crate :: Reg < f4r2 :: F4R2_SPEC > ; # [doc = "Filter bank 4 register 2"] pub mod f4r2 ; # [doc = "F5R1 (rw) register accessor: an alias for `Reg<F5R1_SPEC>`"] pub type F5R1 = crate :: Reg < f5r1 :: F5R1_SPEC > ; # [doc = "Filter bank 5 register 1"] pub mod f5r1 ; # [doc = "F5R2 (rw) register accessor: an alias for `Reg<F5R2_SPEC>`"] pub type F5R2 = crate :: Reg < f5r2 :: F5R2_SPEC > ; # [doc = "Filter bank 5 register 2"] pub mod f5r2 ; # [doc = "F6R1 (rw) register accessor: an alias for `Reg<F6R1_SPEC>`"] pub type F6R1 = crate :: Reg < f6r1 :: F6R1_SPEC > ; # [doc = "Filter bank 6 register 1"] pub mod f6r1 ; # [doc = "F6R2 (rw) register accessor: an alias for `Reg<F6R2_SPEC>`"] pub type F6R2 = crate :: Reg < f6r2 :: F6R2_SPEC > ; # [doc = "Filter bank 6 register 2"] pub mod f6r2 ; # [doc = "F7R1 (rw) register accessor: an alias for `Reg<F7R1_SPEC>`"] pub type F7R1 = crate :: Reg < f7r1 :: F7R1_SPEC > ; # [doc = "Filter bank 7 register 1"] pub mod f7r1 ; # [doc = "F7R2 (rw) register accessor: an alias for `Reg<F7R2_SPEC>`"] pub type F7R2 = crate :: Reg < f7r2 :: F7R2_SPEC > ; # [doc = "Filter bank 7 register 2"] pub mod f7r2 ; # [doc = "F8R1 (rw) register accessor: an alias for `Reg<F8R1_SPEC>`"] pub type F8R1 = crate :: Reg < f8r1 :: F8R1_SPEC > ; # [doc = "Filter bank 8 register 1"] pub mod f8r1 ; # [doc = "F8R2 (rw) register accessor: an alias for `Reg<F8R2_SPEC>`"] pub type F8R2 = crate :: Reg < f8r2 :: F8R2_SPEC > ; # [doc = "Filter bank 8 register 2"] pub mod f8r2 ; # [doc = "F9R1 (rw) register accessor: an alias for `Reg<F9R1_SPEC>`"] pub type F9R1 = crate :: Reg < f9r1 :: F9R1_SPEC > ; # [doc = "Filter bank 9 register 1"] pub mod f9r1 ; # [doc = "F9R2 (rw) register accessor: an alias for `Reg<F9R2_SPEC>`"] pub type F9R2 = crate :: Reg < f9r2 :: F9R2_SPEC > ; # [doc = "Filter bank 9 register 2"] pub mod f9r2 ; # [doc = "F10R1 (rw) register accessor: an alias for `Reg<F10R1_SPEC>`"] pub type F10R1 = crate :: Reg < f10r1 :: F10R1_SPEC > ; # [doc = "Filter bank 10 register 1"] pub mod f10r1 ; # [doc = "F10R2 (rw) register accessor: an alias for `Reg<F10R2_SPEC>`"] pub type F10R2 = crate :: Reg < f10r2 :: F10R2_SPEC > ; # [doc = "Filter bank 10 register 2"] pub mod f10r2 ; # [doc = "F11R1 (rw) register accessor: an alias for `Reg<F11R1_SPEC>`"] pub type F11R1 = crate :: Reg < f11r1 :: F11R1_SPEC > ; # [doc = "Filter bank 11 register 1"] pub mod f11r1 ; # [doc = "F11R2 (rw) register accessor: an alias for `Reg<F11R2_SPEC>`"] pub type F11R2 = crate :: Reg < f11r2 :: F11R2_SPEC > ; # [doc = "Filter bank 11 register 2"] pub mod f11r2 ; # [doc = "F12R1 (rw) register accessor: an alias for `Reg<F12R1_SPEC>`"] pub type F12R1 = crate :: Reg < f12r1 :: F12R1_SPEC > ; # [doc = "Filter bank 4 register 1"] pub mod f12r1 ; # [doc = "F12R2 (rw) register accessor: an alias for `Reg<F12R2_SPEC>`"] pub type F12R2 = crate :: Reg < f12r2 :: F12R2_SPEC > ; # [doc = "Filter bank 12 register 2"] pub mod f12r2 ; # [doc = "F13R1 (rw) register accessor: an alias for `Reg<F13R1_SPEC>`"] pub type F13R1 = crate :: Reg < f13r1 :: F13R1_SPEC > ; # [doc = "Filter bank 13 register 1"] pub mod f13r1 ; # [doc = "F13R2 (rw) register accessor: an alias for `Reg<F13R2_SPEC>`"] pub type F13R2 = crate :: Reg < f13r2 :: F13R2_SPEC > ; # [doc = "Filter bank 13 register 2"] pub mod f13r2 ;